---
- hosts: servers
  tasks:

    - name: Install Python 3 and NGINX
      become: true
      yum:
        name: 
          - python3
          # - nginx
        state: latest
    
    - name: Check if NodeJs repos is set up
      become: true
      shell: yum repolist | { grep nodesource || true; }
      register: nodejs_repo
      changed_when: nodejs_repo.stdout_lines|length < 1
      args: 
        warn: false

    - name: Set up NodeJs package repository
      when: nodejs_repo.changed
      become: true
      script: /playbooks/install_node.sh

    - name: Install NodeJs
      when: nodejs_repo.changed
      become: true
      yum:
        name: 
          - nodejs
        state: latest

    - name: Check if HTTP proxy is installed
      shell: npm list -g | { grep configurable-http-proxy || true; }
      register: http_proxy_installed
      changed_when: http_proxy_installed.stdout_lines|length < 1

    - name: Install NodeJs HTTP proxy
      when: http_proxy_installed.changed
      become: true
      command: npm install -g configurable-http-proxy

    - name: Create jupyter user
      become: true
      user:
        name: jupyter
        uid: 2001
        home: /home/jupyter
        shell: /bin/bash
    
    - name: Set permissions for Jupyter Hub installation directory
      become: true
      file: 
        dest: /opt/jupyterhub
        state: directory
        owner: jupyter
        group: jupyter
        mode: u=rwx,g=rwx,o=rx
        recurse: yes
      
    - name: Check if Python packages are installed
      become: true
      become_user: jupyter
      shell: /opt/jupyterhub/bin/python3 -m pip list | { grep -E "(wheel |jupyterhub |jupyterlab |ipywidgets )" || true; }
      register: python_packages_installed
      changed_when: python_packages_installed.stdout_lines|length < 1

    - name: Create python dependency installation script
      when: python_packages_installed.changed
      become: true
      copy:
        dest: /install.sh
        content: |
          set -e
          python3 -m venv /opt/jupyterhub/
          /opt/jupyterhub/bin/python3 -m pip install --upgrade pip
          /opt/jupyterhub/bin/python3 -m pip install wheel
          /opt/jupyterhub/bin/python3 -m pip install jupyterhub
          /opt/jupyterhub/bin/python3 -m pip install jupyterlab
          /opt/jupyterhub/bin/python3 -m pip install ipywidgets
    
    - name: Make installation script executable
      when: python_packages_installed.changed
      become: true
      file:
        dest: /install.sh
        owner: jupyter
        group: jupyter
        mode: u=rwx,g=rwx,o=rx
    
    - name: Execute python dependency installation script
      when: python_packages_installed.changed
      become: true
      become_user: jupyter
      shell: bash /install.sh
      register: installation

    - debug: var=installation.stdout_lines
      when: python_packages_installed.changed

    - name: Create configuration folder
      become: true
      become_user: jupyter
      file: 
        dest: /opt/jupyterhub/etc/jupyterhub
        state: directory

    - name: Create configuration file
      become: true
      become_user: jupyter
      copy:
        dest: /opt/jupyterhub/etc/jupyterhub/jupyterhub_config.py
        content: |
          c.Spawner.default_url = '/lab'
          c.JupyterHub.bind_url = 'http://:8080'
          c.Authenticator.allowed_users = {'app_admin'}
          c.Authenticator.admin_users = {'app_admin'}

    - name: Check if Anaconda is installed
      become: true
      become_user: jupyter
      stat:
        path: /opt/conda/condabin/conda
      register: conda_installed
    
    - name: Install Anaconda
      when: not conda_installed.stat.exists
      become: true
      command: bash /prod/pf/work/anaconda_installer.sh -b -p /opt/conda

    - name: Load conda on user login
      become: true
      file:
        src: /opt/conda/etc/profile.d/conda.sh
        dest: /etc/profile.d/conda.sh
        state: link

    - name: Create conda environment directory
      become: true
      file:
        dest: /opt/conda/envs
        state: directory
        owner: jupyter
        group: jupyter
        mode: u=rwx,g=rwx,o=rx

    - name: Check if default environment exists
      become: true
      become_user: jupyter
      stat:
        path: /opt/conda/envs/default
      register: conda_default

    - name: Create default conda environment
      when: not conda_default.stat.exists
      become: true
      become_user: jupyter
      command: /opt/conda/bin/conda create -y --prefix /opt/conda/envs/default python=3.7 ipykernel

    - name: Check if default environment is installed for Jupyter Hub
      become: true
      become_user: jupyter
      stat:
        path: /opt/jupyterhub/share/jupyter/kernels/default
      register: conda_jupyter

    - name: Install default IPython kernel in JupyterHub directory
      when: not conda_jupyter.stat.exists
      become: true
      become_user: jupyter
      command: /opt/conda/envs/default/bin/python -m ipykernel install --prefix=/opt/jupyterhub/ --name 'default' --display-name "Default"

    - name: Create system service diretory
      become: true
      become_user: jupyter
      file:
        dest: /opt/jupyterhub/etc/systemd
        state: directory

    - name: Create system service configuration
      become: true
      become_user: jupyter
      copy:
        dest: /opt/jupyterhub/etc/systemd/jupyterhub.service
        content: |
          [Unit]
          Description=JupyterHub
          After=syslog.target network.target

          [Service]
          User=root
          Environment="PATH=/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/jupyterhub/bin"
          ExecStart=/opt/jupyterhub/bin/jupyterhub -f /opt/jupyterhub/etc/jupyterhub/jupyterhub_config.py

          [Install]
          WantedBy=multi-user.target
    
    - name: Symlink system service configuration
      become: true
      file: 
        src: /opt/jupyterhub/etc/systemd/jupyterhub.service
        dest: /etc/systemd/system/jupyterhub.service
        state: link

    - name: Create Jupyter Hub administration command alias
      become: true
      lineinfile:
        path: /etc/sudoers
        state: present
        line: 'Cmnd_Alias JUPYTERHUB_ADMIN = /usr/bin/systemctl start jupyterhub.service, /usr/bin/systemctl stop jupyterhub.service'

    - name: Grant system rights to jupyter user
      become: true
      lineinfile:
        path: /etc/sudoers
        state: present
        line: 'jupyter ALL=(ALL) NOPASSWD: JUPYTERHUB_ADMIN'

    - name: Start Jupyter Hub service
      become: true
      systemd:
        name: jupyterhub
        enabled: true
        daemon_reload: true
        state: restarted

    - name: Create application admin account
      become: true
      user:
        name: app_admin
        # password: app_admin
        password: $1$SomeSalt$e03CSVArHQoaAkC8sPsKm0
        uid: 2002
        home: /home/app_admin
        shell: /bin/bash
        
    - name: Install httpd package
      become: true
      yum:
        name: httpd
        state: latest
      
    - name: Create apache user
      become: true
      user:
        name: apache
        uid: 2003
        home: /home/apache
        shell: /bin/bash

    - name: Set permissions on server configuration
      become: true
      file: 
        dest: /etc/httpd
        owner: apache
        group: apache
        mode: u=rwx,g=rwx,o=rx
        recurse: yes

    - name: Create Apache administration command alias
      become: true
      lineinfile:
        path: /etc/sudoers
        state: present
        line: 'Cmnd_Alias APACHE_ADMIN = /usr/bin/systemctl start httpd.service, /usr/bin/systemctl stop httpd.service'

    - name: Grant httpd admin rights to apache user
      become: true
      lineinfile:
        path: /etc/sudoers
        state: present
        line: 'apache ALL=(ALL) NOPASSWD: APACHE_ADMIN'

    - name: Create Jupyter Hub Apache configuration
      become: true
      become_user: apache
      copy: 
        remote_src: true
        src: /prod/pf/work/jupyterhub.conf
        dest : /etc/httpd/conf.d/jupyterhub.conf

    - name: Start httpd service
      become: true
      systemd:
        state: started
        name: httpd